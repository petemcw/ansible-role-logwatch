---
# We need sudo for some of the Docker commands.
sudo: required

# A list of OSes to use for testing.
env:
  - distro: ubuntu1604
    init: /lib/systemd/systemd
    run_opts: '--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro'
    playbook: test.yml
  - distro: ubuntu1404
    init: /sbin/init
    run_opts: ''
    playbook: test.yml
  - distro: ubuntu1204
    init: /sbin/init
    run_opts: ''
    playbook: test.yml

# Tell Travis to start Docker when it brings up an environment.
services:
  - docker

# Pull the image from Docker Hub for the OS under test.
before_install:
  - 'docker pull petemcw/docker-ansible-${distro}:latest'

# Start the container from the image and perform tests.
script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)

  # Run container detached.
  - 'docker run --detach --volume="${PWD}":/etc/ansible/roles/test_role:ro ${run_opts} petemcw/docker-ansible-${distro}:latest "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/test_role/tests/${playbook} --syntax-check'

  # Run the role.
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/test_role/tests/${playbook}'

  # Check if idempotent.
  - idempotence=$(mktemp)
  - 'docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/test_role/tests/${playbook} | tee -a ${idempotence}'
  - >
    tail ${idempotence}
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

# Notify Ansible Galaxy when a role builds successfully.
notifications:
